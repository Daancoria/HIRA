{"ast":null,"code":"var _jsxFileName = \"/Users/therealpharaohfresh/HIRA/hirafrontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from \"../config/firebase\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, firebaseUser => {\n      if (firebaseUser) {\n        // We'll use whatever name was provided during login\n        // But if no name, fallback to email\n        setUser(prevUser => ({\n          ...(prevUser || {\n            name: 'Unknown'\n          }),\n          // retain previous user data or default name\n          role: 'Manager' // set role to 'Manager'\n        }));\n      } else {\n        setUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const login = async (email, password, role, name) => {\n    await signInWithEmailAndPassword(auth, email, password);\n    // Directly use the name from LoginPage\n    setUser({\n      name,\n      role\n    });\n  };\n  const register = async (email, password) => {\n    // create user\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n  const logout = async () => {\n    await signOut(auth);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n};\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","onAuthStateChanged","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","unsubscribe","firebaseUser","prevUser","name","role","login","email","password","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","Error","$RefreshReg$"],"sources":["/Users/therealpharaohfresh/HIRA/hirafrontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { auth } from \"../config/firebase\";\r\nimport {\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  User as FirebaseUser\r\n} from 'firebase/auth';\r\n\r\ntype Role = 'Manager' | 'Director';\r\n\r\ninterface User {\r\n  name: string;\r\n  role: Role;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  register : (email: string, password: string) => Promise<void>;\r\n  login: (email: string, password: string, role: Role, name: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser: FirebaseUser | null) => {\r\n      if (firebaseUser) {\r\n        // We'll use whatever name was provided during login\r\n        // But if no name, fallback to email\r\n        setUser((prevUser) => ({\r\n          ...(prevUser || { name: 'Unknown' }), // retain previous user data or default name\r\n          role: 'Manager' // set role to 'Manager'\r\n        }));\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string, role: Role, name: string) => {\r\n    await signInWithEmailAndPassword(auth, email, password);\r\n    // Directly use the name from LoginPage\r\n    setUser({ name, role });\r\n  };\r\n  const register = async (email: string, password: string) => {\r\n    // create user\r\n    await createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n  \r\n\r\n  const logout = async () => {\r\n    await signOut(auth);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, register, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SACEC,kBAAkB,EAClBC,0BAA0B,EAC1BC,OAAO,EACPC,8BAA8B,QAEzB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBvB,MAAMC,WAAW,gBAAGX,aAAa,CAA8BY,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGb,kBAAkB,CAACD,IAAI,EAAGe,YAAiC,IAAK;MAClF,IAAIA,YAAY,EAAE;QAChB;QACA;QACAF,OAAO,CAAEG,QAAQ,KAAM;UACrB,IAAIA,QAAQ,IAAI;YAAEC,IAAI,EAAE;UAAU,CAAC,CAAC;UAAE;UACtCC,IAAI,EAAE,SAAS,CAAC;QAClB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLL,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC;IAEF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,EAAEH,IAAU,EAAED,IAAY,KAAK;IACjF,MAAMf,0BAA0B,CAACF,IAAI,EAAEoB,KAAK,EAAEC,QAAQ,CAAC;IACvD;IACAR,OAAO,CAAC;MAAEI,IAAI;MAAEC;IAAK,CAAC,CAAC;EACzB,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAAA,CAAOF,KAAa,EAAEC,QAAgB,KAAK;IAC1D;IACA,MAAMjB,8BAA8B,CAACJ,IAAI,EAAEoB,KAAK,EAAEC,QAAQ,CAAC;EAC7D,CAAC;EAGD,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMpB,OAAO,CAACH,IAAI,CAAC;IACnBa,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEU,QAAQ;MAAEH,KAAK;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAC5DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAzCWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA2CzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,GAAG,GAAGpC,UAAU,CAACU,WAAW,CAAC;EACnC,IAAI,CAAC0B,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}