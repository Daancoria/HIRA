{"ast":null,"code":"const USE_MOCK = true; // 👈 Toggle this to false when you're ready for real backend\n\nexport async function getBotResponse(prompt) {\n  if (USE_MOCK) {\n    // 🔁 Mocked response with simulated delay\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(`📊 (Mock) AI says: \"${prompt}\" real AI coming soon.`);\n      }, 1000);\n    });\n  }\n\n  // 🔌 Real backend call\n  const response = await fetch('http://localhost:5000/analyze', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      prompt\n    })\n  });\n  if (!response.ok) throw new Error('Server error');\n  const data = await response.json();\n  return data.reply || 'No reply from server.';\n}","map":{"version":3,"names":["USE_MOCK","getBotResponse","prompt","Promise","resolve","setTimeout","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","reply"],"sources":["/Users/therealpharaohfresh/HIRA/hirafrontend/src/services/chatbotService.ts"],"sourcesContent":["const USE_MOCK = true; // 👈 Toggle this to false when you're ready for real backend\r\n\r\nexport async function getBotResponse(prompt: string): Promise<string> {\r\n  if (USE_MOCK) {\r\n    // 🔁 Mocked response with simulated delay\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(`📊 (Mock) AI says: \"${prompt}\" real AI coming soon.`);\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  // 🔌 Real backend call\r\n  const response = await fetch('http://localhost:5000/analyze', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ prompt }),\r\n  });\r\n\r\n  if (!response.ok) throw new Error('Server error');\r\n\r\n  const data = await response.json();\r\n  return data.reply || 'No reply from server.';\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,IAAI,CAAC,CAAC;;AAEvB,OAAO,eAAeC,cAAcA,CAACC,MAAc,EAAmB;EACpE,IAAIF,QAAQ,EAAE;IACZ;IACA,OAAO,IAAIG,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfD,OAAO,CAAC,uBAAuBF,MAAM,wBAAwB,CAAC;MAChE,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEV;IAAO,CAAC;EACjC,CAAC,CAAC;EAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EAEjD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,KAAK,IAAI,uBAAuB;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}