{"ast":null,"code":"var _jsxFileName = \"/Users/therealpharaohfresh/HIRA/hirafrontend/src/components/ChatInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport styles from '../pages/ChatbotPage.module.css';\n\n// Props for the ChatInput component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ChatInput component for typing and sending chat messages\nexport default function ChatInput({\n  value,\n  onChange,\n  onSend,\n  isLoading\n}) {\n  _s();\n  const inputRef = useRef(null);\n\n  // Focus the input field when the component mounts\n  useEffect(() => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, []);\n\n  // Handle Enter key to send message\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !isLoading && value.trim()) {\n      onSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputRow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        maxLength: 300,\n        placeholder: \"Type a message...\",\n        value: value,\n        onChange: e => onChange(e.target.value),\n        onKeyDown: handleKeyDown,\n        className: styles.input,\n        \"aria-label\": \"Chat message input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.charCount,\n        children: [value.length, \"/300\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSend,\n      disabled: !value.trim() || isLoading,\n      className: styles.button,\n      \"aria-label\": \"Send message\",\n      style: {\n        opacity: !value.trim() || isLoading ? 0.6 : 1,\n        cursor: !value.trim() || isLoading ? 'not-allowed' : 'pointer'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n_c = ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useRef","useEffect","styles","jsxDEV","_jsxDEV","ChatInput","value","onChange","onSend","isLoading","_s","inputRef","_inputRef$current","current","focus","handleKeyDown","e","key","trim","className","inputRow","children","style","flexGrow","display","flexDirection","ref","type","maxLength","placeholder","target","onKeyDown","input","fileName","_jsxFileName","lineNumber","columnNumber","charCount","length","onClick","disabled","button","opacity","cursor","_c","$RefreshReg$"],"sources":["/Users/therealpharaohfresh/HIRA/hirafrontend/src/components/ChatInput.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport styles from '../pages/ChatbotPage.module.css';\r\n\r\n// Props for the ChatInput component\r\ninterface ChatInputProps {\r\n  value: string; // Current input value\r\n  onChange: (text: string) => void; // Handler for input change\r\n  onSend: () => void; // Handler for sending message\r\n  isLoading?: boolean; // Optional: disables input/button when loading\r\n}\r\n\r\n// ChatInput component for typing and sending chat messages\r\nexport default function ChatInput({ value, onChange, onSend, isLoading }: ChatInputProps) {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  // Focus the input field when the component mounts\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, []);\r\n\r\n  // Handle Enter key to send message\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && !isLoading && value.trim()) {\r\n      onSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputRow}>\r\n      {/* Input field and character counter */}\r\n      <div style={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          maxLength={300}\r\n          placeholder=\"Type a message...\"\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          className={styles.input}\r\n          aria-label=\"Chat message input\"\r\n        />\r\n        <div className={styles.charCount}>{value.length}/300</div>\r\n      </div>\r\n\r\n      {/* Send button */}\r\n      <button\r\n        onClick={onSend}\r\n        disabled={!value.trim() || isLoading}\r\n        className={styles.button}\r\n        aria-label=\"Send message\"\r\n        style={{\r\n          opacity: (!value.trim() || isLoading) ? 0.6 : 1,\r\n          cursor: (!value.trim() || isLoading) ? 'not-allowed' : 'pointer'\r\n        }}\r\n      >\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,iCAAiC;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA;AACA,eAAe,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAA0B,CAAC,EAAE;EAAAC,EAAA;EACxF,MAAMC,QAAQ,GAAGX,MAAM,CAA0B,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAW,iBAAA;IACd,CAAAA,iBAAA,GAAAD,QAAQ,CAACE,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,aAAa,GAAIC,CAAwC,IAAK;IAClE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACR,SAAS,IAAIH,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE;MACnDV,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,QAAS;IAAAC,QAAA,gBAE9BjB,OAAA;MAAKkB,KAAK,EAAE;QAAEC,QAAQ,EAAE,CAAC;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAJ,QAAA,gBACpEjB,OAAA;QACEsB,GAAG,EAAEf,QAAS;QACdgB,IAAI,EAAC,MAAM;QACXC,SAAS,EAAE,GAAI;QACfC,WAAW,EAAC,mBAAmB;QAC/BvB,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAGS,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACc,MAAM,CAACxB,KAAK,CAAE;QAC1CyB,SAAS,EAAEhB,aAAc;QACzBI,SAAS,EAAEjB,MAAM,CAAC8B,KAAM;QACxB,cAAW;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFhC,OAAA;QAAKe,SAAS,EAAEjB,MAAM,CAACmC,SAAU;QAAAhB,QAAA,GAAEf,KAAK,CAACgC,MAAM,EAAC,MAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAGNhC,OAAA;MACEmC,OAAO,EAAE/B,MAAO;MAChBgC,QAAQ,EAAE,CAAClC,KAAK,CAACY,IAAI,CAAC,CAAC,IAAIT,SAAU;MACrCU,SAAS,EAAEjB,MAAM,CAACuC,MAAO;MACzB,cAAW,cAAc;MACzBnB,KAAK,EAAE;QACLoB,OAAO,EAAG,CAACpC,KAAK,CAACY,IAAI,CAAC,CAAC,IAAIT,SAAS,GAAI,GAAG,GAAG,CAAC;QAC/CkC,MAAM,EAAG,CAACrC,KAAK,CAACY,IAAI,CAAC,CAAC,IAAIT,SAAS,GAAI,aAAa,GAAG;MACzD,CAAE;MAAAY,QAAA,EACH;IAED;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CAhDuBL,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}